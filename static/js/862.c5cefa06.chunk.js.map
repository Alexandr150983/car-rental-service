{"version":3,"file":"static/js/862.c5cefa06.chunk.js","mappings":"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","sources":["pages/CatalogPage/CatalogPage.styled.js","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledCatalog = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 1184px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const CarsWrapper = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-row-gap: 50px;\r\n  margin-bottom: 88px;\r\n  padding-top: 50px;\r\n`;\r\n\r\nexport const LoadBtn = styled.button`\r\n  display: block;\r\n  text-decoration: underline;\r\n  color: rgb(52, 112, 255);\r\n  border: none;\r\n  background-color: transparent;\r\n  margin-top: 100px;\r\n  margin-bottom: 138px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  padding: 12px 24px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: rgb(11, 68, 205);\r\n  }\r\n`;\r\n\r\nexport const CenteredLoader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  width: 100%;\r\n`;\r\n\r\nexport const FilterDropdown = styled.select`\r\n  padding: 8px 12px;\r\n  border-radius: 4px;\r\n  background-color: white;\r\n  border: 1px solid #ccc;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\r\n  cursor: pointer;\r\n  &:hover {\r\n    border-color: #888;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #555;\r\n  }\r\n`;","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchCars } from \"../../services/carApi\";\r\nimport {\r\n  selectAllCars,\r\n  selectCarsLoading,\r\n  selectCarsError,\r\n  selectFavorites,\r\n} from \"../../redux/Cars/selectors\";\r\nimport { addFavorite, removeFavorite } from \"../../redux/Cars/favoritesSlice\";\r\nimport CarCard from \"../../components/CarCard/CarCard\";\r\nimport {\r\n  CarsWrapper,\r\n  CenteredLoader,\r\n  FilterDropdown,\r\n  LoadBtn,\r\n  StyledCatalog,\r\n} from \"./CatalogPage.styled\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport makes from \"../../data/makes.json\";\r\n\r\nconst CatalogPage = () => {\r\n  const dispatch = useDispatch();\r\n  const cars = useSelector(selectAllCars);\r\n  const loading = useSelector(selectCarsLoading);\r\n  const error = useSelector(selectCarsError);\r\n  const favorites = useSelector(selectFavorites);\r\n  const [visibleCars, setVisibleCars] = useState([]);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [selectedMake, setSelectedMake] = useState(\"All\");\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const limit = 12;\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      await dispatch(fetchCars());\r\n      setLoaded(true);\r\n    };\r\n\r\n    fetch();\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const filteredCars =\r\n      selectedMake === \"All\"\r\n        ? cars\r\n        : cars.filter((car) => car.make === selectedMake);\r\n    setVisibleCars(filteredCars.slice(0, limit));\r\n    setHasMore(filteredCars.length > limit);\r\n  }, [cars, selectedMake, loaded, limit]);\r\n\r\n  const handleLoadMore = () => {\r\n    const currentLength = visibleCars.length;\r\n    const nextCars =\r\n      selectedMake === \"All\"\r\n        ? cars\r\n        : cars.filter((car) => car.make === selectedMake);\r\n    const nextVisibleCars = nextCars.slice(0, currentLength + limit);\r\n    setVisibleCars(nextVisibleCars);\r\n\r\n    setHasMore(nextVisibleCars.length < nextCars.length);\r\n  };\r\n\r\n  const handleFavoriteToggle = (car) => {\r\n    const isCurrentlyFavorite = favorites.some(\r\n      (favorite) => favorite.id === car.id\r\n    );\r\n\r\n    if (isCurrentlyFavorite) {\r\n      dispatch(removeFavorite(car.id));\r\n    } else {\r\n      dispatch(addFavorite(car));\r\n    }\r\n  };\r\n\r\n  const handleMakeChange = (event) => {\r\n    setSelectedMake(event.target.value);\r\n\r\n    const filteredCars =\r\n      event.target.value === \"All\"\r\n        ? cars\r\n        : cars.filter((car) => car.make === event.target.value);\r\n    setVisibleCars(filteredCars.slice(0, limit));\r\n    setHasMore(filteredCars.length > limit);\r\n  };\r\n\r\n  return (\r\n    <StyledCatalog>\r\n      {loading && (\r\n        <CenteredLoader>\r\n          <Loader />\r\n        </CenteredLoader>\r\n      )}\r\n      {!loading && (\r\n        <>\r\n          {error && <p>Error: {error}</p>}\r\n          <FilterDropdown onChange={handleMakeChange}>\r\n            <option value=\"All\">All Makes</option>\r\n            {makes.map((make, index) => (\r\n              <option key={index} value={make}>\r\n                {make}\r\n              </option>\r\n            ))}\r\n          </FilterDropdown>\r\n          <CarsWrapper>\r\n            {visibleCars.map((car) => (\r\n              <CarCard\r\n                key={car.id}\r\n                car={car}\r\n                onFavoriteToggle={handleFavoriteToggle}\r\n                isFavorite={favorites.some(\r\n                  (favorite) => favorite.id === car.id\r\n                )}\r\n              />\r\n            ))}\r\n          </CarsWrapper>\r\n          {hasMore && (\r\n            <LoadBtn type=\"button\" onClick={handleLoadMore}>\r\n              Load more\r\n            </LoadBtn>\r\n          )}\r\n        </>\r\n      )}\r\n    </StyledCatalog>\r\n  );\r\n};\r\n\r\nexport default CatalogPage;\r\n"],"names":["StyledCatalog","styled","section","_templateObject","_taggedTemplateLiteral","CarsWrapper","ul","_templateObject2","LoadBtn","button","_templateObject3","CenteredLoader","div","_templateObject4","FilterDropdown","select","_templateObject5","CatalogPage","dispatch","useDispatch","cars","useSelector","selectAllCars","loading","selectCarsLoading","error","selectCarsError","favorites","selectFavorites","visibleCars","setVisibleCars","useState","loaded","setLoaded","selectedMake","setSelectedMake","hasMore","setHasMore","limit","useEffect","async","fetchCars","fetch","filteredCars","filter","car","make","slice","length","handleFavoriteToggle","isCurrentlyFavorite","some","favorite","id","removeFavorite","addFavorite","_jsxs","children","_jsx","Loader","_Fragment","onChange","event","target","value","makes","map","index","CarCard","onFavoriteToggle","isFavorite","type","onClick","handleLoadMore","currentLength","nextCars","nextVisibleCars"],"sourceRoot":""}